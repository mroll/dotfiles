;; -*- mode:emacs-lisp; coding: utf-8-emacs; -*-
;; Gnus startup file.
;; Never delete this file -- if you want to force Gnus to read the
;; .newsrc file (if you have one), touch .newsrc instead.
(setq gnus-newsrc-file-version "Gnus v5.13")

(setq gnus-newsrc-last-checked-date '"Sun, 24 Dec 2017 00:13:29 -0500")

(setq gnus-newsrc-alist '(("nnimap+mproll:INBOX" 3 (1 . 362) ((unexist) (seen (263 . 362))) "nnimap:mproll" ((modseq) (uidvalidity . "2") (active 1 . 362) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+mproll:Sent" 3 (1 . 105) ((unexist) (seen (52 . 53) 64 79 87)) "nnimap:mproll" ((modseq) (uidvalidity . "2") (active 1 . 105) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+mproll:Spam" 3 ((1 . 19)) ((unexist)) "nnimap:mproll" ((modseq) (uidvalidity . "2") (active 1 . 19) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+mproll:Trash" 3 ((1 . 73)) ((unexist)) "nnimap:mproll" ((modseq) (uidvalidity . "2") (active 1 . 73) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+matt:Trash" 3 nil ((unexist)) "nnimap:matt" ((modseq) (uidvalidity . "2") (active 1 . 0) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+matt:Sent" 3 nil ((unexist)) "nnimap:matt" ((modseq) (uidvalidity . "2") (active 1 . 0) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+matt:Spam" 3 nil ((unexist)) "nnimap:matt" ((modseq) (uidvalidity . "2") (active 1 . 0) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nnimap+matt:INBOX" 3 (1) ((unexist) (seen 1)) "nnimap:matt" ((modseq) (uidvalidity . "2") (active 1 . 1) (permanent-flags %Seen %SEEN %Flagged %FLAGGED %Deleted %DELETED %Draft %DRAFT $junk junk nonjunk))) ("nndraft:drafts" 1 nil nil (nndraft "") ((gnus-dummy (gnus-draft-mode)))) ("gmane.comp.lang.tcl.core" 3 ((1 . 21957)) ((unexist) (seen (21858 . 21957)))) ("gmane.comp.encryption.gpg.user" 3 ((1 . 46955)) ((unexist) (seen (46946 . 46955)))) ("gmane.comp.encryption.gpg.devel" 3 ((1 . 23582)) ((unexist) (seen (23553 . 23582)))) ("gmane.comp.lang.tcl.tcllib.devel" 3 ((1 . 60)) ((unexist) (seen (1 . 60)))) ("gmane.comp.terminal-emulators.tmux.user" 3 ((1 . 8499))) ("gmane.comp.version-control.git.magit" 3 ((1 . 2031)) ((unexist) (seen (2002 . 2031)))) ("gmane.comp.version-control.git.user" 3 ((1 . 11881)) ((unexist) (seen (11782 . 11881)))) ("gmane.emacs.devel" 3 ((1 . 221396))) ("gmane.emacs.gnus.user" 3 ((1 . 18775)) ((unexist) (seen (18676 . 18775))))))

(setq gnus-server-alist '(("archive" nnfolder "archive" (nnfolder-directory "~/Mail/archive") (nnfolder-active-file "~/Mail/archive/active") (nnfolder-get-new-mail nil) (nnfolder-inhibit-expiry t))))

(setq gnus-killed-list '("gmane.comp.ai.machine-learning" "nnimap+matt:All Mail" "nnimap+matt:Archive" "nnimap+mproll:Archive" "nnimap+matt:Folders" "nnimap+matt:Labels" "nnimap+mproll:Labels" "nnimap+mproll:Folders" "nnimap+mproll:All Mail"))

(setq gnus-topic-topology '(("Gnus" visible nil nil) (("matt@matthewroll.com" visible nil nil)) (("mproll@protonmail.com" visible))))

(setq gnus-topic-alist '(("Gnus" "nndraft:drafts" "gmane.comp.lang.tcl.core" "gmane.comp.encryption.gpg.user" "gmane.comp.encryption.gpg.devel" "gmane.comp.lang.tcl.tcllib.devel" "gmane.comp.terminal-emulators.tmux.user" "gmane.comp.version-control.git.magit" "gmane.comp.version-control.git.user" "gmane.emacs.devel" "gmane.emacs.gnus.user") ("matt@matthewroll.com" "nnimap+matt:INBOX" "nnimap+matt:Sent" "nnimap+matt:Spam" "nnimap+matt:Trash") ("mproll@protonmail.com" "nnimap+mproll:INBOX" "nnimap+mproll:Sent" "nnimap+mproll:Spam" "nnimap+mproll:Trash")))
